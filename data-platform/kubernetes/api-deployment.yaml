apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
  namespace: data-platform
spec:
  replicas: 2
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
      - name: api
        image: data-platform/api:latest
        env:
        - name: DATABASE_URL
          value: "postgresql://admin:$(POSTGRES_PASSWORD)@postgres-service/data_platform"
        - name: MONGODB_URL
          value: "mongodb://admin:$(MONGO_PASSWORD)@mongodb-service:27017/"
        - name: REDIS_URL
          value: "redis://redis-service:6379"
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-secrets
              key: postgres-password
        - name: MONGO_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-secrets
              key: mongo-password
        - name: WANDB_API_KEY
          valueFrom:
            secretKeyRef:
              name: wandb-secrets
              key: api-key
              optional: true
        ports:
        - containerPort: 8000
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: api-service
  namespace: data-platform
spec:
  selector:
    app: api
  ports:
  - port: 8000
    targetPort: 8000
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: data-platform
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:7-alpine
        ports:
        - containerPort: 6379
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "1Gi"
            cpu: "500m"
---
apiVersion: v1
kind: Service
metadata:
  name: redis-service
  namespace: data-platform
spec:
  selector:
    app: redis
  ports:
  - port: 6379
    targetPort: 6379
  type: ClusterIP